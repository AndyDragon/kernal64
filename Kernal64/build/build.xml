<project name="Kernal64 C64 emulator" default="deploy" basedir="..">
	<property name="sources.dir" value="${basedir}/src" />
	<property name="build.dir" value="${basedir}/bin" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="c64.jar" value="${dist.dir}/kernal64.jar"/>
	<property name="c64.install" value="${dist.dir}/kernal64_install.zip"/>
	
	<!-- VERSION -->
	<property name="VERSION" value="13.1"/> 
	
	<condition property="optimise" value="yes">
		<not>
			<isset property="optimise"/>
		</not>
	</condition>
	
	<!-- label is set only if ant is executed by CI -->
 	<condition property="BUILD_NUMBER" value="?">
		<not>
			<isset property="BUILD_NUMBER"/>
		</not>
	</condition>
	
	<property name="version" value="${VERSION} b${BUILD_NUMBER}"/>

	<target name="scala-init">
		<property name="scala-library.jar" value="${lib.dir}/scala-library.jar" />
		<path id="build.classpath">
			<pathelement location="${scala-library.jar}" />
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
			<pathelement location="${build.dir}" />
		</path>
		<taskdef resource="scala/tools/ant/antlib.xml">
			<classpath>
				<pathelement location="${lib.dir}/scala-compiler.jar" />
				<pathelement location="${scala-library.jar}" />
				<pathelement location="${lib.dir}/scala-reflect.jar" />
				<pathelement location="${lib.dir}/scala-parser-combinators_2.11-1.0.1.jar" />
			</classpath>
		</taskdef>
	</target>

	<target name="compile" depends="scala-init">
		<tstamp/>
		<echo message="Building version ${version}"/>
		<mkdir dir="${build.dir}"/>		
		<echo file="${sources.dir}/ucesoft/cbm/Version.scala" message='package ucesoft.cbm ; object Version { val VERSION = "${version}" ; val BUILD_DATE="${TODAY}"}'/>
		<echo message="Optimise is set to ${optimise}"/>
		<javac srcdir="${sources.dir}" destdir="${build.dir}" includes="ucesoft/c64/peripheral/sid/resid/*.java ucesoft/c64/peripheral/sid/resid2/*.java">
			<classpath refid="build.classpath"/>
		</javac>
		<scalac srcdir="${sources.dir}" excludes="ucesoft/c64/peripheral/sid/resid/** ucesoft/c64/peripheral/sid/resid2/**" 
				destdir="${build.dir}" 
				classpathref="build.classpath" 
				deprecation="yes" 
				optimise="${optimise}"
				encoding="ISO-8859-1"
				addparams="-Yinline-warnings -feature"				
				target="jvm-1.7" />		
	</target>
		
	<target name="deploy" depends="compile">
		<mkdir dir="${dist.dir}"/>
		<!-- copy images and roms -->
		<mkdir dir="${build.dir}/resources"/>
		<copy todir="${build.dir}/resources">
			<fileset dir="${basedir}/resources"/>
		</copy>
		<mkdir dir="${build.dir}/roms"/>
		<copy todir="${build.dir}/roms">
			<fileset dir="${basedir}/roms"/>
		</copy>
		<jar destfile="${c64.jar}" basedir="${build.dir}">
			<manifest>
				<attribute name="Main-Class" value="ucesoft.c64.C64"/>
			</manifest>
			<service type="ucesoft.c64.game.GameProvider">
			    <provider classname="ucesoft.c64.game.GameBaseSpi"/>
				<provider classname="ucesoft.c64.game.PouetDemoSpi"/>
			</service>
		</jar>
	</target>
	
	<target name="pack" depends="deploy">
		<copy todir="${dist.dir}/pack/kernal64/lib">
			<fileset dir="${basedir}/lib/" includes="*jinput* *.jar" excludes="scala-compiler.jar"/>
			<fileset dir="${dist.dir}" includes="*.jar"/>
		</copy>
		<copy todir="${dist.dir}/pack/kernal64">
			<fileset dir="${basedir}/build" includes="*.bat *.sh"/>
		</copy>
		<mkdir dir="${dist.dir}/pack/kernal64/roms"/>
		<zip destfile="${c64.install}" basedir="${dist.dir}/pack"/>
		<delete dir="${dist.dir}/pack"/>
	</target>
		
	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
	</target>				
</project>
