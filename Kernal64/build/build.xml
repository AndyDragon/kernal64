<project name="Kernal64 C64 emulator" default="deploy" basedir="..">
	<property name="sources.dir" value="${basedir}/src" />
	<property name="build.dir" value="${basedir}/bin" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="c64.jar" value="${dist.dir}/kernal64.jar"/>
	<property name="c64.install" value="${dist.dir}/kernal64_install.zip"/>
	
	<!-- VERSION -->
	<property name="VERSION" value="1.5.3"/>
	
	<!-- label is set only if ant is executed by CI -->
 	<condition property="BUILD_NUMBER" value="?">
		<not>
			<isset property="BUILD_NUMBER"/>
		</not>
	</condition>
	
	<property name="version" value="${VERSION} b${BUILD_NUMBER}"/>

	<target name="scala-compile">
		<!-- source scala files -->
		<path id="scala.path">
			<fileset dir="${sources.dir}">
				<include name="**/*.scala"/>
			</fileset>
		</path>
		<!-- library files -->
		<path id="kernal.lib">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar"/>
			</fileset>
			<pathelement location="${build.dir}" />
		</path>

		<pathconvert pathsep="${path.separator}"
					 property="project.lib"
					 refid="kernal.lib">
		</pathconvert>
		<pathconvert pathsep=" "
					 property="scala.path.compile"
					 refid="scala.path">
		</pathconvert>

		<tstamp/>
		<echo message="Building version ${version}"/>
		<mkdir dir="${build.dir}"/>
		<echo file="${sources.dir}/ucesoft/cbm/Version.scala" message='package ucesoft.cbm ; object Version { val VERSION = "${version}" ; val BUILD_DATE="${TODAY}"}'/>
		<javac source="1.8" target="1.8" srcdir="${sources.dir}" destdir="${build.dir}" includes="ucesoft/cbm/peripheral/sid/resid/*.java">
			<classpath refid="kernal.lib"/>
		</javac>
		<mkdir dir="${dist.dir}"/>
		<echo file="${dist.dir}/files" message="${scala.path.compile}"/>
		<java classname="scala.tools.nsc.Main"
			  fork="true"
			  failonerror="true"
			  maxmemory="256m">
			<arg value="-classpath"/>
			<arg value="${project.lib}"/>
			<arg value="-d"/>
			<arg value="${build.dir}"/>
			<arg value="-deprecation"/>
			<arg value="-encoding"/>
			<arg value="ISO-8859-1"/>
			<arg value="-opt:_"/>
			<arg value="-language:postfixOps"/>
			<arg value="@${dist.dir}/files"/>
			<classpath>
				<pathelement location="${lib.dir}/scala-compiler.jar"/>
				<pathelement location="${lib.dir}/scala-library.jar"/>
				<pathelement location="${lib.dir}/scala-reflect.jar"/>
			</classpath>
		</java>
		<delete file="${dist.dir}/files"/>
	</target>

	<target name="deploy" depends="scala-compile">
		<!-- copy images and roms -->
		<mkdir dir="${build.dir}/resources"/>
		<copy todir="${build.dir}/resources">
			<fileset dir="${basedir}/resources"/>
		</copy>
		<mkdir dir="${build.dir}/roms"/>
		<copy todir="${build.dir}/roms">
			<fileset dir="${basedir}/roms"/>
		</copy>
		<jar destfile="${c64.jar}" basedir="${build.dir}">
			<service type="ucesoft.cbm.game.GameProvider">
			    <provider classname="ucesoft.cbm.game.GameBaseSpi"/>
				<provider classname="ucesoft.cbm.game.PouetDemoSpi"/>
			</service>
		</jar>
	</target>
	
	<target name="pack" depends="deploy">
		<copy todir="${dist.dir}/pack/kernal64/lib">
			<fileset dir="${basedir}/lib/" includes="*jinput* *.jar" excludes="scala-compiler.jar"/>
			<fileset dir="${dist.dir}" includes="*.jar"/>
		</copy>
		<copy todir="${dist.dir}/pack/kernal64">
			<fileset dir="${basedir}/build" includes="*.bat *.sh"/>
		</copy>
		<mkdir dir="${dist.dir}/pack/kernal64/roms"/>
		<zip destfile="${c64.install}" basedir="${dist.dir}/pack"/>
		<delete dir="${dist.dir}/pack"/>
	</target>
		
	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
	</target>				
</project>
